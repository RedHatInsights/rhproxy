# Teardown tasks
#
- hosts: all
  tasks:
  - name: uninstall test packages
    package:
      name:
        - "{{ test_rhsm_package }}"
        - "{{ test_epel_package }}"
        - "{{ test_3rd_party_repo['package'] }}"
      state: absent
    when: inventory_hostname in groups['CLI']
    tags: cleanup

  - name: unsubscribe from RHSM
    redhat_subscription:
      state: absent
    tags: unsubscribe,cleanup

  - name: unregister from Insights
    command: insights-client --unregister
    register: insights_unregister
    # it's okay to exit with 1 because the system is no longer registered thanks to the task above
    failed_when: insights_unregister.rc > 1
    tags: unsubscribe,cleanup

  - name: read the Insights client log
    slurp:
      src: /var/log/insights-client/insights-client.log
    register: insights_log
    tags: insights

  - name: assert that ConnectTimeoutError is not found in the log
    assert:
      that: insights_log.content | b64decode | regex_search('ConnectTimeoutError') == None
      success_msg: "OK: 'ConnectTimeoutError' was NOT found in the log."
      fail_msg: "Not OK: 'ConnectTimeoutError' was found in the log."
    tags: insights

  - name: remove EPEL
    package:
      name: epel-release
      state: absent
    when: inventory_hostname in groups['CLI']
    tags: cleanup

  - name: remove the test repo
    yum_repository:
      name: "{{ test_3rd_party_repo['name'] }}"
      state: absent
    when: inventory_hostname in groups['CLI']
    tags: cleanup

  - name: run the helper script to unconfigure the proxy
    command: "/tmp/configure-client.sh --unconfigure"
    when: inventory_hostname in groups['CLI']
    tags: run_helper_uncfg,cleanup

  - name: reset the firewall on the client
    # this is a two-step operation
    shell: "iptables -P OUTPUT ACCEPT ; iptables -F"
    when: inventory_hostname in groups['CLI']
    tags: teardown_firewall,cleanup

  - name: stop the proxy service
    command: "{{ command }} stop"
    become_user: "{{ local_user }}"
    when: inventory_hostname in groups['PROXY']
    tags: service_stop,cleanup

  - name: uninstall the proxy service
    command: "{{ command }} uninstall -f"
    become_user: "{{ local_user }}"
    when: inventory_hostname in groups['PROXY']
    tags: service_uninstall,cleanup

  - name: uninstall the proxy RPM
    package:
      name: rhproxy
      state: absent
    when: inventory_hostname in groups['PROXY']
    tags: rpm_uninstall,cleanup

  - name: delete the user for Insights proxy
    user:
      name: "{{ local_user }}"
      state: absent
      remove: true
    when: inventory_hostname in groups['PROXY']
    tags: user_delete,cleanup

  - name: reset the firewall on the server
    command: iptables -F
    when: inventory_hostname in groups['PROXY']
    tags: teardown_firewall,cleanup
